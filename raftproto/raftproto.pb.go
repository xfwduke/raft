// Code generated by protoc-gen-go. DO NOT EDIT.
// source: raftproto.proto

package raftproto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AppendEntryRequest struct {
	Term                 uint64   `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	LeaderId             uint64   `protobuf:"varint,2,opt,name=leaderId,proto3" json:"leaderId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AppendEntryRequest) Reset()         { *m = AppendEntryRequest{} }
func (m *AppendEntryRequest) String() string { return proto.CompactTextString(m) }
func (*AppendEntryRequest) ProtoMessage()    {}
func (*AppendEntryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e874c4bcbd9b47a3, []int{0}
}
func (m *AppendEntryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppendEntryRequest.Unmarshal(m, b)
}
func (m *AppendEntryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppendEntryRequest.Marshal(b, m, deterministic)
}
func (m *AppendEntryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppendEntryRequest.Merge(m, src)
}
func (m *AppendEntryRequest) XXX_Size() int {
	return xxx_messageInfo_AppendEntryRequest.Size(m)
}
func (m *AppendEntryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AppendEntryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AppendEntryRequest proto.InternalMessageInfo

func (m *AppendEntryRequest) GetTerm() uint64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *AppendEntryRequest) GetLeaderId() uint64 {
	if m != nil {
		return m.LeaderId
	}
	return 0
}

type AppendEntryResponse struct {
	Term                 uint64   `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	Success              bool     `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AppendEntryResponse) Reset()         { *m = AppendEntryResponse{} }
func (m *AppendEntryResponse) String() string { return proto.CompactTextString(m) }
func (*AppendEntryResponse) ProtoMessage()    {}
func (*AppendEntryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e874c4bcbd9b47a3, []int{1}
}
func (m *AppendEntryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppendEntryResponse.Unmarshal(m, b)
}
func (m *AppendEntryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppendEntryResponse.Marshal(b, m, deterministic)
}
func (m *AppendEntryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppendEntryResponse.Merge(m, src)
}
func (m *AppendEntryResponse) XXX_Size() int {
	return xxx_messageInfo_AppendEntryResponse.Size(m)
}
func (m *AppendEntryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AppendEntryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AppendEntryResponse proto.InternalMessageInfo

func (m *AppendEntryResponse) GetTerm() uint64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *AppendEntryResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func init() {
	proto.RegisterType((*AppendEntryRequest)(nil), "raftproto.AppendEntryRequest")
	proto.RegisterType((*AppendEntryResponse)(nil), "raftproto.AppendEntryResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AppendEntryRPCClient is the client API for AppendEntryRPC service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AppendEntryRPCClient interface {
	AppendEntry(ctx context.Context, in *AppendEntryRequest, opts ...grpc.CallOption) (*AppendEntryResponse, error)
}

type appendEntryRPCClient struct {
	cc *grpc.ClientConn
}

func NewAppendEntryRPCClient(cc *grpc.ClientConn) AppendEntryRPCClient {
	return &appendEntryRPCClient{cc}
}

func (c *appendEntryRPCClient) AppendEntry(ctx context.Context, in *AppendEntryRequest, opts ...grpc.CallOption) (*AppendEntryResponse, error) {
	out := new(AppendEntryResponse)
	err := c.cc.Invoke(ctx, "/raftproto.AppendEntryRPC/AppendEntry", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AppendEntryRPCServer is the server API for AppendEntryRPC service.
type AppendEntryRPCServer interface {
	AppendEntry(context.Context, *AppendEntryRequest) (*AppendEntryResponse, error)
}

func RegisterAppendEntryRPCServer(s *grpc.Server, srv AppendEntryRPCServer) {
	s.RegisterService(&_AppendEntryRPC_serviceDesc, srv)
}

func _AppendEntryRPC_AppendEntry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppendEntryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppendEntryRPCServer).AppendEntry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/raftproto.AppendEntryRPC/AppendEntry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppendEntryRPCServer).AppendEntry(ctx, req.(*AppendEntryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AppendEntryRPC_serviceDesc = grpc.ServiceDesc{
	ServiceName: "raftproto.AppendEntryRPC",
	HandlerType: (*AppendEntryRPCServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AppendEntry",
			Handler:    _AppendEntryRPC_AppendEntry_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "raftproto.proto",
}

func init() { proto.RegisterFile("raftproto.proto", fileDescriptor_e874c4bcbd9b47a3) }

var fileDescriptor_e874c4bcbd9b47a3 = []byte{
	// 162 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2f, 0x4a, 0x4c, 0x2b,
	0x29, 0x28, 0xca, 0x2f, 0xc9, 0xd7, 0x03, 0x93, 0x42, 0x9c, 0x70, 0x01, 0x25, 0x17, 0x2e, 0x21,
	0xc7, 0x82, 0x82, 0xd4, 0xbc, 0x14, 0xd7, 0xbc, 0x92, 0xa2, 0xca, 0xa0, 0xd4, 0xc2, 0xd2, 0xd4,
	0xe2, 0x12, 0x21, 0x21, 0x2e, 0x96, 0x92, 0xd4, 0xa2, 0x5c, 0x09, 0x46, 0x05, 0x46, 0x0d, 0x96,
	0x20, 0x30, 0x5b, 0x48, 0x8a, 0x8b, 0x23, 0x27, 0x35, 0x31, 0x25, 0xb5, 0xc8, 0x33, 0x45, 0x82,
	0x09, 0x2c, 0x0e, 0xe7, 0x2b, 0x39, 0x73, 0x09, 0xa3, 0x98, 0x52, 0x5c, 0x90, 0x9f, 0x57, 0x9c,
	0x8a, 0xd5, 0x18, 0x09, 0x2e, 0xf6, 0xe2, 0xd2, 0xe4, 0xe4, 0xd4, 0xe2, 0x62, 0xb0, 0x29, 0x1c,
	0x41, 0x30, 0xae, 0x51, 0x1c, 0x17, 0x1f, 0xb2, 0x21, 0x01, 0xce, 0x42, 0x3e, 0x5c, 0xdc, 0x48,
	0x22, 0x42, 0xb2, 0x7a, 0x08, 0x8f, 0x60, 0x3a, 0x5a, 0x4a, 0x0e, 0x97, 0x34, 0xc4, 0x35, 0x49,
	0x6c, 0x60, 0x29, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x03, 0x8f, 0x20, 0xc8, 0x0f, 0x01,
	0x00, 0x00,
}
